package com.example.david.lightandroidproject;

import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.dmacan.lightandroid.data.api.listener.OnDataResponseListener;
import com.dmacan.lightandroid.navigation.fragment.LightFragment;
import com.dmacan.lightandroid.type.LightData;
import com.dmacan.lightandroid.type.property.Labeled;
import com.dmacan.lightandroid.util.LightFont;
import com.example.david.lightandroidproject.data.controller.MusicianController;
import com.example.david.lightandroidproject.data.model.Musician;

import butterknife.InjectView;
import butterknife.OnClick;
import retrofit.client.Response;

/**
 * Created by David on 16.11.2014..
 * <p/>
 * In this fragment, we are demonstrating how to create POST requests to the API and then do something with the response
 */
public class DemoPOSTTrackFragment extends LightFragment implements Labeled, OnDataResponseListener {

    @InjectView(R.id.etQuery)
    EditText etQuery;
    @InjectView(R.id.btnSearch)
    Button btnSearch;
    @InjectView(R.id.txtResult)
    TextView txtResult;

    // Since this fragment uses MusicianController class, it is best that the controller is declared globally for easier access
    private MusicianController musicianController;
    private String prefix;

    @Override
    public int provideLayoutRes() {
        return R.layout.fragment_post_musicians;
    }

    @Override
    public void main() {
        // Set iconFont to the btnSearch
        LightFont.setFont(btnSearch);
        // this line is not important for the demo
        prefix = txtResult.getText().toString();
        // Instantiate the controller for further usage
        musicianController = new MusicianController();
        // Set the listener to listen for data responses from the API
        musicianController.setOnDataResponseListener(this);
    }

    @Override
    public String provideLabel() {
        return "POST";
    }

    @OnClick(R.id.btnSearch)
    void search() {
        // Set prefix text to the TextView
        txtResult.setText(prefix);
        // Call API request to search for the musician
        musicianController.searchMusician(etQuery.getText().toString());
    }

    /**
     * This method is called after the server sends a response
     *
     * @param response         Response returned by the server
     * @param retrofitResponse Response generated by the retrofit
     */
    @Override
    public void onResponse(LightData response, Response retrofitResponse) {
        // First we need to cast the response to the model class we need
        Musician musician = (Musician) response;
        if (musician != null && (musician.getName() != null))
            txtResult.append(musician.getName());
    }
}
